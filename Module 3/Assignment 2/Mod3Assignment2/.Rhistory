y = "Price",
color = "Color") +
theme_minimal()
# Create a line chart with facets for each color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, group = color, color = color)) +
geom_line() +
labs(title = "Line Chart of Carat and Price by Color in Diamonds (Sample)",
x = "Carat",
y = "Price",
color = "Color") +
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
theme(legend.key.size = unit(1.5, "cm"))  # Adjust the size of legend keys
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
theme(legend.key.size = unit(3, "cm"))  # Adjust the size of legend keys
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
library(dplyr)
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Calculate the summary statistics for each color
summary_stats <- dsample %>%
group_by(color) %>%
summarize(avg_carat = mean(carat),
avg_price = mean(price),
max_carat = max(carat),
max_price = max(price),
min_carat = min(carat),
min_price = min(price))
# Find the color with the largest price and carat size
max_price_carat <- summary_stats[which.max(summary_stats$avg_price), ]
max_carat_price <- summary_stats[which.max(summary_stats$avg_carat), ]
# Find the color with the lowest price and smallest carat size
min_price_carat <- summary_stats[which.min(summary_stats$avg_price), ]
min_carat_price <- summary_stats[which.min(summary_stats$avg_carat), ]
# Print the results
cat("Color with the largest average price:", max_price_carat$color, "\n")
cat("Average price:", max_price_carat$avg_price, "\n")
cat("Average carat size:", max_price_carat$avg_carat, "\n\n")
cat("Color with the largest average carat size:", max_carat_price$color, "\n")
cat("Average price:", max_carat_price$avg_price, "\n")
cat("Average carat size:", max_carat_price$avg_carat, "\n\n")
cat("Color with the lowest average price:", min_price_carat$color, "\n")
cat("Average price:", min_price_carat$avg_price, "\n")
cat("Average carat size:", min_price_carat$avg_carat, "\n\n")
cat("Color with the lowest average carat size:", min_carat_price$color, "\n")
cat("Average price:", min_carat_price$avg_price, "\n")
cat("Average carat size:", min_carat_price$avg_carat, "\n")
library(dplyr)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
library(dplyr)
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
library(dplyr)
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
library(dplyr)
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
library(dplyr)
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
library(dplyr)
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create a random sample of 100 rows from the diamonds dataset
dsample <- diamonds[sample(nrow(diamonds), 100), ]
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
library(dplyr)
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create line chart with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_line(size = 1.5) +  # Adjust size to make lines larger
labs(title = "Line Chart of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create scatterplot with color using dsample dataset
ggplot(dsample, aes(x = carat, y = price, color = color)) +
geom_point() +
geom_smooth() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds (Sample)",
x = "Carat",
y = "Price")
# Create scatterplot with color using diamonds dataset
ggplot(diamonds, aes(x = carat, y = price, color = color)) +
geom_point() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds",
x = "Carat",
y = "Price")
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
# Convert color to character to ensure proper printing
dsample$color <- as.character(dsample$color)
# Find the row with the largest price
max_price <- dsample[which.max(dsample$price), ]
# Find the row with the smallest price
min_price <- dsample[which.min(dsample$price), ]
# Find the row with the largest carat size
max_carat <- dsample[which.max(dsample$carat), ]
# Find the row with the smallest carat size
min_carat <- dsample[which.min(dsample$carat), ]
# Print the results
cat("Color with the largest price:", max_price$color, "\n")
cat("Price:", max_price$price, "\n")
cat("Carat size:", max_price$carat, "\n\n")
cat("Color with the smallest price:", min_price$color, "\n")
cat("Price:", min_price$price, "\n")
cat("Carat size:", min_price$carat, "\n\n")
cat("Color with the largest carat size:", max_carat$color, "\n")
cat("Price:", max_carat$price, "\n")
cat("Carat size:", max_carat$carat, "\n\n")
cat("Color with the smallest carat size:", min_carat$color, "\n")
cat("Price:", min_carat$price, "\n")
cat("Carat size:", min_carat$carat, "\n")
# Create scatterplot with color using diamonds dataset
ggplot(diamonds, aes(x = carat, y = price, color = color)) +
geom_point() +
labs(title = "Scatterplot of Carat and Price with Color in Diamonds",
x = "Carat",
y = "Price")
