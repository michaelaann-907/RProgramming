# Load required packages
library(tidyverse)
# Load the dataset
state_income <- read_csv("state_income.csv")
state_income
# Create state_income2 dataset with selected variables and rearranged column order
state_income2 <- state_income %>%
select(State_ab, everything()) %>%
select(State_Name, State_ab, County, City, Type, ALand, Mean, Median, Stdev) %>%
rename(State = State_Name) # Rename the State_Name column to State
# Display the first 10 rows of state_income2
head(state_income2, 10)
summary1 <- group_by(NC_income, County)
# Load required packages
library(tidyverse)
# Load the dataset
state_income <- read_csv("state_income.csv")
# Create state_income2 dataset with selected variables and rearrange column order
# using select() command to help get remaining columns
state_income2 <- state_income %>%
select(State_ab, everything()) %>%
select(State_Name, State_ab, County, City, Type, ALand, Mean, Median, Stdev) %>%
rename(State = State_Name) # Rename the State_Name column to State
# using head() command to show first 10 rows of data of state_income2
head(state_income2, 10)
# Rename columns
# Ex.) state_income2 <- rename(state_income2, new_variable_name = old_varaibale_name)
state_income2 <- rename(state_income2,
SquareArea = ALand,
IncomeMean = Mean,
IncomeMedian = Median,
IncomeStDev = Stdev)
# Display the first 10 rows of the dataset
head(state_income2, 10)
# Create a new dataset containing only North Carolina data using filter()
NC_income <- state_income2 %>%
filter(State == "North Carolina")
# Display the first 10 rows of the new dataset
head(NC_income, 10)
# Arrange the NC_income dataset by County in ascending order using arrange()
NC_income <- arrange(NC_income, County)
# Display the first 10 rows of the arranged dataset
head(NC_income, 10)
summary1 <- group_by(NC_income, County)
summary1 <- summarise(summary1, mean = mean(IncomeMean))
summary2 <- NC_income %>%
group_by(City) %>%
summarise(mean = mean(IncomeMean))
summary1 <- group_by(NC_income, County)
summary1 <- summarise(summary1, mean = mean(IncomeMean))
summary2 <- NC_income %>%
group_by(City) %>%
summarise(mean = mean(IncomeMean))
summary1
summary1 <- group_by(NC_income, County)
summary1 <- summarise(summary1, mean = mean(IncomeMean))
summary2 <- NC_income %>%
group_by(City) %>%
summarise(mean = mean(IncomeMean))
summary1
summary2
# Create summary3 dataset using pipe operator
summary3 <- NC_income %>%
group_by(Type) %>%
summarise(mean = mean(IncomeMean))
# Create summary3 dataset using pipe operator
summary3 <- NC_income %>%
group_by(Type) %>%
summarise(mean = mean(IncomeMean))
Summary3
# Create summary3 dataset using pipe operator
summary3 <- NC_income %>%
group_by(Type) %>%
summarise(mean = mean(IncomeMean))
Summary3
# Create summary3 dataset using pipe operator
summary3 <- NC_income %>%
group_by(Type) %>%
summarise(mean = mean(IncomeMean))
Summary3()
# Create summary3 dataset using pipe operator
summary3 <- NC_income %>%
group_by(Type) %>%
summarise(mean = mean(IncomeMean))
summary3
library(ggplot2)
# Scatterplot for summary1 dataset (County income data)
ggplot(data = summary1, aes(x = County, y = mean)) +
geom_point() +
labs(y = "Income", title = "Mean Income by County") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Create AvgStateIncome dataset by grouping state_income2 by State_ab and summarizing using mean of IncomeMean
AvgStateIncome <- state_income2 %>%
group_by(State_ab) %>%
summarise(AvgIncome = mean(IncomeMean))
# Filter AvgStateIncome to include only states with "N" in the abbreviation
AvgStateIncome_N <- filter(AvgStateIncome, grepl("N", State_ab))
# Create AvgStateIncome dataset by grouping state_income2 by State_ab and summarizing using mean of IncomeMean
AvgStateIncome <- state_income2 %>%
group_by(State_ab) %>%
summarise(AvgIncome = mean(IncomeMean))
AvgStateIncome
# Filter AvgStateIncome to include only states with "N" in the abbreviation
AvgStateIncome_N <- filter(AvgStateIncome, grepl("N", State_ab))
AvgStateIncome_N
# Scatterplot for AvgStateIncome dataset
ggplot(data = AvgStateIncome_N, aes(x = State_ab, y = AvgIncome)) +
geom_point() +
labs(x = "State", y = "Average Income", title = "Average Income by State")
# Scatterplot for AvgStateIncome dataset
ggplot(data = AvgStateIncome_N, aes(x = State_ab, y = AvgIncome)) +
geom_point() +
labs(x = "State", y = "Average Income", title = "Average Income by State")
# Load required packages
library(tidyverse)
# Load the dataset
state_income <- read_csv("state_income.csv")
# Create state_income2 dataset with selected variables and rearrange column order
# using select() command to help get remaining columns
state_income2 <- state_income %>%
select(State_ab, everything()) %>%
select(State_Name, State_ab, County, City, Type, ALand, Mean, Median, Stdev) %>%
rename(State = State_Name) # Rename the State_Name column to State
# using head() command to show first 10 rows of data of state_income2
head(state_income2, 10)
# Rename columns
# Ex.) state_income2 <- rename(state_income2, new_variable_name = old_varaibale_name)
state_income2 <- rename(state_income2,
SquareArea = ALand,
IncomeMean = Mean,
IncomeMedian = Median,
IncomeStDev = Stdev)
# Display the first 10 rows of the dataset
head(state_income2, 10)
# Create a new dataset containing only North Carolina data using filter()
NC_income <- state_income2 %>%
filter(State == "North Carolina")
# Display the first 10 rows of the new dataset
head(NC_income, 10)
# Arrange the NC_income dataset by County in ascending order using arrange()
NC_income <- arrange(NC_income, County)
# Display the first 10 rows of the arranged dataset
head(NC_income, 10)
summary1 <- group_by(NC_income, County)
summary1 <- summarise(summary1, mean = mean(IncomeMean))
summary2 <- NC_income %>%
group_by(City) %>%
summarise(mean = mean(IncomeMean))
summary1
summary2
# Create summary3 dataset using pipe operator
summary3 <- NC_income %>%
group_by(Type) %>%
summarise(mean = mean(IncomeMean))
summary3
library(ggplot2)
# Scatterplot for summary1 dataset (County income data)
ggplot(data = summary1, aes(x = County, y = mean)) +
geom_point() +
labs(y = "Income", title = "Mean Income by County") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Create AvgStateIncome dataset by grouping state_income2 by State_ab and summarizing using mean of IncomeMean
AvgStateIncome <- state_income2 %>%
group_by(State_ab) %>%
summarise(AvgIncome = mean(IncomeMean))
AvgStateIncome
# Filter AvgStateIncome to include only states with "N" in the abbreviation
AvgStateIncome_N <- filter(AvgStateIncome, grepl("N", State_ab))
AvgStateIncome_N
# Scatterplot for AvgStateIncome dataset
ggplot(data = AvgStateIncome_N, aes(x = State_ab, y = AvgIncome)) +
geom_point() +
labs(x = "State", y = "Average Income", title = "Average Income by State")
