# Load necessary packages
library(tidyverse)
library(lubridate)
library(readr)
Appointments <- read_csv("Appointments.csv")
#View(Appointments)
# Add ReservationYear variable
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Create ReservationDate variable
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(year = ReservationYear, month = ReservationMonth, day = ReservationDay))
# Create CreationDate variable
Appointments <- Appointments %>%
mutate(CreationDate = make_date(year = CreationYear, month = CreationMonth, day = CreationDay))
# Create ReservationSpan variable
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(difftime(ReservationDate, CreationDate, units = "days")))
# View summary of data
summary(Appointments)
# Convert ReservationSpan to numeric
Appointments$ReservationSpan <- as.numeric(Appointments$ReservationSpan)
# View summary after conversion
summary(Appointments)
# Check correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
correlation
# Create bar chart for Show variable
ggplot(data = Appointments, aes(x = factor(Show))) +
geom_bar() +
labs(x = "Show", y = "Count", title = "Show vs No Show")
library(readr)
Appointments <- read_csv("Appointments.csv")
#View(Appointments)
# Add ReservationYear variable
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Create ReservationDate variable
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(year = ReservationYear, month = ReservationMonth, day = ReservationDay))
# Create CreationDate variable
Appointments <- Appointments %>%
mutate(CreationDate = make_date(year = CreationYear, month = CreationMonth, day = CreationDay))
# Create ReservationSpan variable
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(difftime(ReservationDate, CreationDate, units = "days")))
# View summary of data
summary(Appointments)
# Convert ReservationSpan to numeric
Appointments$ReservationSpan <- as.numeric(Appointments$ReservationSpan)
# View summary after conversion
summary(Appointments)
# Exploratory Analysis
# Create a new title: Exploratory Analysis
# Create a new chunk of code
summary(Appointments)
# Change ReservationSpan variable to be numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
# Run the summary() command again and answer the questions below
summary(Appointments)
# Run correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
correlation
# Create a bar chart using the Show variable
barplot(table(Appointments$Show), main = "Appointment Show Status", xlab = "Show", ylab = "Frequency")
# Answer the question
# Based on 0 being “no show” and 1 being “show”, did most people make their appointments?
# Add ReservationYear variable
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Step 13: Add ReservationYear variable
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Step 14: Create ReservationDate and CreationDate variables
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(month = ReservationMonth, day = ReservationDay, year = ReservationYear),
CreationDate = make_date(month = CreationMonth, day = CreationDay, year = CreationYear))
# Step 15: Create ReservationSpan variable
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationDate - CreationDate))
# Step 13: Add ReservationYear variable
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Step 14: Create ReservationDate and CreationDate variables
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(month = ReservationMonth, day = ReservationDay, year = ReservationYear),
CreationDate = make_date(month = CreationMonth, day = CreationDay, year = CreationYear))
# Step 15: Create ReservationSpan variable
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationDate - CreationDate))
# View summary of data
summary(Appointments)
# View summary of data
summary(Appointments)
# Step 18: Change ReservationSpan to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
# Step 19: Run summary() again
summary(Appointments)
# Step 20: Correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
correlation
# Step 21: Bar chart of Show variable
barplot(table(Appointments$Show), main = "Appointment Show Status", xlab = "Show", ylab = "Frequency", col = c("red", "green"))
# Step 22: Knit R Markdown to Word and upload
# Step 19: Run summary() again
summary(Appointments)
# Answers to the questions:
# a. What is the average time between appointment creation and the actual reservation date?
mean_reservation_span <- mean(Appointments$ReservationSpan)
mean_reservation_span
# b. What was the max time?
max_reservation_span <- max(Appointments$ReservationSpan)
max_reservation_span
# c. What was the min time?
min_reservation_span <- min(Appointments$ReservationSpan)
min_reservation_span
# Step 20: Correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
correlation
# Step 21: Bar chart of Show variable
barplot(table(Appointments$Show), main = "Appointment Show Status", xlab = "Show", ylab = "Frequency", col = c("red", "green"))
# Answer to question 20:
# a. The correlation between ReservationSpan and Show is [correlation value].
# Answer to question 21:
# a. Based on the bar chart, most people made their appointments.
library(readr)
Appointments <- read_csv("Appointments.csv")
#View(Appointments)
# Add ReservationYear variable
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Step 13: Add ReservationYear variable
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Step 14: Create ReservationDate and CreationDate variables
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(month = ReservationMonth, day = ReservationDay, year = ReservationYear),
CreationDate = make_date(month = CreationMonth, day = CreationDay, year = CreationYear))
# Step 15: Create ReservationSpan variable
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationDate - CreationDate))
# View summary of data
summary(Appointments)
# Step 18: Change ReservationSpan to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
# Step 19: Run summary() again
summary(Appointments)
# Step 19: Run summary() again
summary(Appointments)
# Answers to the questions:
# a. What is the average time between appointment creation and the actual reservation date?
mean_reservation_span <- mean(Appointments$ReservationSpan)
mean_reservation_span
# b. What was the max time?
max_reservation_span <- max(Appointments$ReservationSpan)
max_reservation_span
# c. What was the min time?
min_reservation_span <- min(Appointments$ReservationSpan)
min_reservation_span
# Step 20: Correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
correlation
# Step 21: Bar chart of Show variable
barplot(table(Appointments$Show), main = "Appointment Show Status", xlab = "Show", ylab = "Frequency", col = c("red", "green"))
# Answer to question 20:
# a. The correlation between ReservationSpan and Show is [correlation value].
# Answer to question 21:
# a. Based on the bar chart, most people made their appointments.
# Load necessary packages
library(tidyverse)
library(lubridate)
library(readr)
Appointments <- read_csv("Appointments.csv")
#View(Appointments)
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(year = ReservationYear, month = ReservationMonth, day = ReservationDay),
CreationDate = make_date(year = CreationYear, month = CreationMonth, day = CreationDay))
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(difftime(ReservationDate, CreationDate, units = "days")))
# View summary of data
summary(Appointments)
# Step 18: Convert ReservationSpan to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
# View summary of data
summary(Appointments)
# Step 18: Convert ReservationSpan to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
summary(Appointments)
# Calculate average time between appointment creation and reservation date
average_reservation_span <- mean(Appointments$ReservationSpan)
# Find maximum time between appointment creation and reservation date
max_reservation_span <- max(Appointments$ReservationSpan)
# Find minimum time between appointment creation and reservation date
min_reservation_span <- min(Appointments$ReservationSpan)
# Print results
cat("a. Average time between appointment creation and reservation date:", average_reservation_span, "days\n")
cat("b. Maximum time between appointment creation and reservation date:", max_reservation_span, "days\n")
cat("c. Minimum time between appointment creation and reservation date:", min_reservation_span, "days\n")
# Step 20: Correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
# Step 21: Create a bar chart for Show variable
ggplot(Appointments, aes(x = factor(Show))) +
geom_bar() +
labs(x = "Show", y = "Frequency", title = "Frequency of Show vs No Show")
# Step 20: Correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
print(Correlation)
# Step 20: Correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
print(correlation)
# Step 21: Create a bar chart for Show variable
ggplot(Appointments, aes(x = factor(Show))) +
geom_bar() +
labs(x = "Show", y = "Frequency", title = "Frequency of Show vs No Show")
# Load necessary packages
library(tidyverse)
library(lubridate)
library(readr)
Appointments <- read_csv("Appointments.csv")
#View(Appointments)
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(year = ReservationYear, month = ReservationMonth, day = ReservationDay),
CreationDate = make_date(year = CreationYear, month = CreationMonth, day = CreationDay))
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(difftime(ReservationDate, CreationDate, units = "days")))
# View summary of data
summary(Appointments)
# Step 18: Convert ReservationSpan to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
summary(Appointments)
# Calculate average time between appointment creation and reservation date
average_reservation_span <- mean(Appointments$ReservationSpan)
# Find maximum time between appointment creation and reservation date
max_reservation_span <- max(Appointments$ReservationSpan)
# Find minimum time between appointment creation and reservation date
min_reservation_span <- min(Appointments$ReservationSpan)
# Print results
cat("a. Average time between appointment creation and reservation date:", average_reservation_span, "days\n")
cat("b. Maximum time between appointment creation and reservation date:", max_reservation_span, "days\n")
cat("c. Minimum time between appointment creation and reservation date:", min_reservation_span, "days\n")
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
print(correlation)
ggplot(Appointments, aes(x = factor(Show))) +
geom_bar() +
labs(x = "Show", y = "Frequency", title = "Frequency of Show vs No Show")
# Load necessary packages
library(tidyverse)
library(lubridate)
library(readr)
Appointments <- read_csv("Appointments.csv")
#View(Appointments)
# set the ReservationYear to 2019 for all the rows
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Combine ReservationYear, ReservationMonth, and ReservationDay to create ReservationDate
# Combine CreationYear, CreationMonth, and CreationDay to create CreationDate
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(year = ReservationYear, month = ReservationMonth, day = ReservationDay),
CreationDate = make_date(year = CreationYear, month = CreationMonth, day = CreationDay))
# Calculate the difference in days between ReservationDate and CreationDate
# Convert the difftime object to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(difftime(ReservationDate, CreationDate, units = "days")))
# View summary of data before converting ReservationSpan to numeric
summary(Appointments)
# Convert ReservationSpan to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
# View summary of data after converting ReservationSpan to numeric
summary(Appointments)
# Calculate average time between appointment creation and reservation date
average_reservation_span <- mean(Appointments$ReservationSpan)
# Find maximum time between appointment creation and reservation date
max_reservation_span <- max(Appointments$ReservationSpan)
# Find minimum time between appointment creation and reservation date
min_reservation_span <- min(Appointments$ReservationSpan)
# Print results
cat("a. Average time between appointment creation and reservation date:", average_reservation_span, "days\n")
cat("b. Maximum time between appointment creation and reservation date:", max_reservation_span, "days\n")
cat("c. Minimum time between appointment creation and reservation date:", min_reservation_span, "days\n")
# Calculate correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
print(correlation)  # Print correlation coefficient
# Create bar chart for Show variable
ggplot(Appointments, aes(x = factor(Show))) +
geom_bar() +
labs(x = "Show", y = "Frequency", title = "Frequency of Show vs No Show")
# Load necessary packages
library(tidyverse)
library(lubridate)
library(readr)
Appointments <- read_csv("Appointments.csv")
#View(Appointments)
# set the ReservationYear to 2019 for all the rows
Appointments <- Appointments %>%
mutate(ReservationYear = 2019)
# Combine ReservationYear, ReservationMonth, and ReservationDay to create ReservationDate
# Combine CreationYear, CreationMonth, and CreationDay to create CreationDate
Appointments <- Appointments %>%
mutate(ReservationDate = make_date(year = ReservationYear, month = ReservationMonth, day = ReservationDay),
CreationDate = make_date(year = CreationYear, month = CreationMonth, day = CreationDay))
# Calculate the difference in days between ReservationDate and CreationDate
# Convert the difftime object to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(difftime(ReservationDate, CreationDate, units = "days")))
# View summary of data before converting ReservationSpan to numeric
summary(Appointments)
# Convert ReservationSpan to numeric
Appointments <- Appointments %>%
mutate(ReservationSpan = as.numeric(ReservationSpan))
# View summary of data after converting ReservationSpan to numeric
summary(Appointments)
# Calculate average time between appointment creation and reservation date
average_reservation_span <- mean(Appointments$ReservationSpan)
# Find maximum time between appointment creation and reservation date
max_reservation_span <- max(Appointments$ReservationSpan)
# Find minimum time between appointment creation and reservation date
min_reservation_span <- min(Appointments$ReservationSpan)
# Print results
cat("a. Average time between appointment creation and reservation date:", average_reservation_span, "days\n")
cat("b. Maximum time between appointment creation and reservation date:", max_reservation_span, "days\n")
cat("c. Minimum time between appointment creation and reservation date:", min_reservation_span, "days\n")
# Calculate correlation between ReservationSpan and Show
correlation <- cor(Appointments$ReservationSpan, Appointments$Show)
print(correlation)  # Print correlation coefficient
# Create bar chart for Show variable
ggplot(Appointments, aes(x = factor(Show))) +
geom_bar() +
labs(x = "Show", y = "Frequency", title = "Frequency of Show vs No Show")
